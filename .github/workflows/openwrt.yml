# ==============================================================================
# GitHub Actions Workflow to build an ULTRA-CUSTOM OpenWrt ROOTFS for LXC
# Version: The Ultimate HiSilicon A9 Build, using the correct 21.02 LTS release.
# ==============================================================================

name: Build OpenWrt 21.02 RootFS for HiSilicon A9 (LXC)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-rootfs:
    runs-on: ubuntu-latest

    env:
      # (KEY CHANGE) Using the last LTS version that officially supports 'hisilicon'.
      OPENWRT_VERSION: 21.02.7
      OPENWRT_TARGET: hisilicon
      OPENWRT_SUBTARGET: generic
      OPENWRT_DOWNLOAD_URL_BASE: https://downloads.openwrt.org/releases

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget

      - name: Download and set up the 'hisilicon' Image Builder for 21.02.7
        run: |
          IMAGE_BUILDER_URL="${OPENWRT_DOWNLOAD_URL_BASE}/${OPENWRT_VERSION}/targets/${OPENWRT_TARGET}/${OPENWRT_SUBTARGET}/openwrt-imagebuilder-${OPENWRT_VERSION}-${OPENWRT_TARGET}-${OPENWRT_SUBTARGET}.Linux-x86_64.tar.xz"
          echo "--- Downloading 'hisilicon' Image Builder from: ${IMAGE_BUILDER_URL} ---"
          wget --tries=5 --retry-connrefused "${IMAGE_BUILDER_URL}" -O imagebuilder.tar.xz
          tar -xJvf imagebuilder.tar.xz
          cd openwrt-imagebuilder-*
          make info

      - name: Build custom ultra-minimal rootfs
        run: |
          cd openwrt-imagebuilder-*
          # 'hisilicon' target has multiple profiles, so we auto-detect the first one.
          DETECTED_PROFILE=$(make info | awk '/Available Profiles:/ {found=1; next} found && NF {print $1; exit}' | sed 's/://')
          if [ -z "${DETECTED_PROFILE}" ]; then
            echo "::error::Could not detect any available profile from 'make info' for hisilicon target!"
            exit 1
          fi
          echo "--- Auto-detected profile: ${DETECTED_PROFILE} ---"
          
          # We use firewall (the older version) instead of firewall4 for 21.02
          PACKAGES=" \
            -dropbear \
            openssh-server \
            -network \
            -ppp -ppp-mod-pppoe \
            -firewall \
            -odhcp6c -odhcpd-ipv6only \
            -luci* \
            -dnsmasq \
            -wpad-basic-wolfssl \
            -iwinfo \
            -logd \
            -urngd \
          "
          echo "--- Building 'hisilicon' 21.02 firmware with packages: ${PACKAGES} ---"
          
          make image \
            PROFILE="${DETECTED_PROFILE}" \
            PACKAGES="${PACKAGES}"
          
          echo "--- Manually creating rootfs tarball ---"
          cd build_dir/target-*/root-*
          tar -czf ../openwrt-rootfs-manual.tar.gz .
          echo "--- Rootfs tarball created successfully ---"

      - name: Upload RootFS artifact
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-21.02-hisilicon-rootfs-armel
          path: openwrt-imagebuilder-*/build_dir/target-*/openwrt-rootfs-manual.tar.gz
          if-no-files-found: error
